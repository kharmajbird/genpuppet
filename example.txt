This example is a transcript of a single run of genpuppet.

Each line is a question and an answer separated by either a "?" or "=>".
It prompts for user input, and stores the results in a hash of hashes of
hashes similar to:  

%{ $resources{'resource'}{$resource_name}{$resource_parameter} }

It doesn't matter what you enter for each prompt, but if you want working
puppet code to be generated, you may wish to enter something syntactically 
correct :)



== command line user input ==
# ./genpuppet.pl
Name of manifest? init.pp
Name of class? myclass
Top level require? my_req1
Top level require? my_req2
Top level require? 
Top level include? my_incl
Top level include? 
Use class nullmailer? [no] 
Use exec set-semaphore? [no] 
file? /etc/sudoers
ensure => file
mode => 0400
owner => root
group => root
target => 
source => puppet://modules/mymod/sudoers
content => 
before => Exec['one']
before => that
before => 
require => Package['kitchen-sink']
require => another
require => 
file? /var/www
ensure => directory
mode => 0755
owner => www-data
group =>    
target => 
source => 
content => 
before => 
require => nothing
require => 
file? 

package? ntp
ensure => installed
before => 
require => 
package? 

exec? restart-ntp
command => /etc/init.d/ntp restart
cwd => 
onlyif => which ntpd
unless => 
creates => 
logoutput => yes
refreshonly => 
subscribe => /etc/ntpd.conf
subscribe => 
before => 
require => 
exec? 

computer? 

cron? 

group? 

host? 

mailalias? 

mount? 

notify? 

ssh_authorized_key? 

sshkey? 

user? 

vaio:/j/genpuppet#


== generated manuscript ==

# cat init.pp
class myclass {
    require my_req1
    require my_req2

    include my_incl

    file { '/etc/sudoers':
        ensure => 'file',
        mode => '0400',
        owner => 'root',
        group => 'root',
        source => 'puppet://modules/mymod/sudoers',
        before => [
            Exec['one'],
            that,
        ],
        require => [
            Package['kitchen-sink'],
            another,
        ],
    }
    file { '/var/www':
        ensure => 'directory',
        mode => '0755',
        owner => 'www-data',
        require => [
            nothing,
        ],
    }
    service { 'ntp':
        ensure => 'running',
        before => [
            File['/etc/sudoers'],
        ],
    }
    package { 'ntp':
        ensure => 'installed',
    }
    exec { 'restart-ntp':
        command => '/etc/init.d/ntp restart',
        onlyif => 'which ntpd',
        logoutput => 'yes',
        subscribe => [
            /etc/ntpd.conf,
        ],
    }


}
